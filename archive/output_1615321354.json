{"content": {"suites": {"0": {"status": {"total_pass": 5, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 3, "total_error": 0}, "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_post_data", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_post_data_inconsistent_sensor_id", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_post_sensor_inexistent_sensor_id", "rerun": "0"}, "3": {"status": "FAIL", "message": "   AssertionError: assert False\n    +  where False = isinstance({'data': [{'_id': '73a2b2325c2b4733a065d3424b69431a', 'id_device': '4fb74c10c62142c0af13c19db36e7d4d', 'id_sensor': 'f6de2b710cc34f5baf6b2a476712e03b', 'id_user': 'f8fff835e36d4401a40630f0a0018264', ...}]}, list)\n    +    where {'data': [{'_id': '73a2b2325c2b4733a065d3424b69431a', 'id_device': '4fb74c10c62142c0af13c19db36e7d4d', 'id_sensor': 'f6de2b710cc34f5baf6b2a476712e03b', 'id_user': 'f8fff835e36d4401a40630f0a0018264', ...}]} = <bound method Response.json of <Response [200]>>()\n    +      where <bound method Response.json of <Response [200]>> = <Response [200]>.json\n", "test_name": "test_get_data", "rerun": "0"}, "4": {"status": "FAIL", "message": "   AssertionError: assert False\n    +  where False = isinstance({'data': [{'_id': '73a2b2325c2b4733a065d3424b69431a', 'id_device': '4fb74c10c62142c0af13c19db36e7d4d', 'id_sensor': 'f6de2b710cc34f5baf6b2a476712e03b', 'id_user': 'f8fff835e36d4401a40630f0a0018264', ...}]}, list)\n    +    where {'data': [{'_id': '73a2b2325c2b4733a065d3424b69431a', 'id_device': '4fb74c10c62142c0af13c19db36e7d4d', 'id_sensor': 'f6de2b710cc34f5baf6b2a476712e03b', 'id_user': 'f8fff835e36d4401a40630f0a0018264', ...}]} = <bound method Response.json of <Response [200]>>()\n    +      where <bound method Response.json of <Response [200]>> = <Response [200]>.json\n", "test_name": "test_get_sensor_data", "rerun": "0"}, "5": {"status": "FAIL", "message": "   AssertionError: assert False\n    +  where False = isinstance({'data': []}, list)\n    +    where {'data': []} = <bound method Response.json of <Response [200]>>()\n    +      where <bound method Response.json of <Response [200]>> = <Response [200]>.json\n", "test_name": "test_get_filtered_sensor_data", "rerun": "0"}, "6": {"status": "PASS", "message": "", "test_name": "test_delete_data_unauthorized", "rerun": "0"}, "7": {"status": "PASS", "message": "", "test_name": "test_delete_data", "rerun": "0"}}, "suite_name": "test/test_data.py"}, "1": {"suite_name": "test/test_device.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_post_device", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_post_device_exists", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_post_device_inexistent_user_id", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_post_device_inconsistent_user_id", "rerun": "0"}, "4": {"status": "FAIL", "message": "   AssertionError: assert False\n    +  where False = isinstance({'devices': [{'_id': '5e4f59be694d49b290903e67c81570a3', 'description': 'description', 'id_user': '5c19a5a2fcd64e2a940...ption': 'TEST-djxeikgzruluwrpa', 'id_user': 'f8fff835e36d4401a40630f0a0018264', 'name': 'TEST-djxeikgzruluwrpa', ...}]}, list)\n    +    where {'devices': [{'_id': '5e4f59be694d49b290903e67c81570a3', 'description': 'description', 'id_user': '5c19a5a2fcd64e2a940...ption': 'TEST-djxeikgzruluwrpa', 'id_user': 'f8fff835e36d4401a40630f0a0018264', 'name': 'TEST-djxeikgzruluwrpa', ...}]} = <bound method Response.json of <Response [200]>>()\n    +      where <bound method Response.json of <Response [200]>> = <Response [200]>.json\n", "test_name": "test_get_devices", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_get_device", "rerun": "0"}, "6": {"status": "FAIL", "message": "   AssertionError: assert False\n    +  where False = isinstance({'devices': [{'_id': '4fb74c10c62142c0af13c19db36e7d4d', 'description': 'hhzolglwmioeorok', 'id_user': 'f8fff835e36d44...ption': 'TEST-djxeikgzruluwrpa', 'id_user': 'f8fff835e36d4401a40630f0a0018264', 'name': 'TEST-djxeikgzruluwrpa', ...}]}, list)\n    +    where {'devices': [{'_id': '4fb74c10c62142c0af13c19db36e7d4d', 'description': 'hhzolglwmioeorok', 'id_user': 'f8fff835e36d44...ption': 'TEST-djxeikgzruluwrpa', 'id_user': 'f8fff835e36d4401a40630f0a0018264', 'name': 'TEST-djxeikgzruluwrpa', ...}]} = <bound method Response.json of <Response [200]>>()\n    +      where <bound method Response.json of <Response [200]>> = <Response [200]>.json\n", "test_name": "test_get_user_devices", "rerun": "0"}, "7": {"status": "PASS", "message": "", "test_name": "test_delete_sensor_unauthorized", "rerun": "0"}, "8": {"status": "PASS", "message": "", "test_name": "test_delete_device", "rerun": "0"}}, "status": {"total_pass": 7, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 2, "total_error": 0}}, "2": {"suite_name": "test/test_health.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_health", "rerun": "0"}}, "status": {"total_pass": 1, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "3": {"suite_name": "test/test_sensor.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_post_sensor", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_post_sensor_invalid_user_id", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_post_sensor_inconsistent_device_id", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_post_sensor_inexistent_device_id", "rerun": "0"}, "4": {"status": "FAIL", "message": "   AssertionError: assert False\n    +  where False = isinstance({'sensors': [{'_id': '41c15f802c504b2f84bf2e13f906d0f0', 'id_device': '5e4f59be694d49b290903e67c81570a3', 'id_user': '...4f59be694d49b290903e67c81570a3', 'id_user': '5c19a5a2fcd64e2a9401225b61596b3d', 'measure_unit': 'celssius', ...}, ...]}, list)\n    +    where {'sensors': [{'_id': '41c15f802c504b2f84bf2e13f906d0f0', 'id_device': '5e4f59be694d49b290903e67c81570a3', 'id_user': '...4f59be694d49b290903e67c81570a3', 'id_user': '5c19a5a2fcd64e2a9401225b61596b3d', 'measure_unit': 'celssius', ...}, ...]} = <bound method Response.json of <Response [200]>>()\n    +      where <bound method Response.json of <Response [200]>> = <Response [200]>.json\n", "test_name": "test_get_sensors", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_get_sensor", "rerun": "0"}, "6": {"status": "FAIL", "message": "   AssertionError: assert False\n    +  where False = isinstance({'sensors': [{'_id': 'f6de2b710cc34f5baf6b2a476712e03b', 'id_device': '4fb74c10c62142c0af13c19db36e7d4d', 'id_user': '...: '4fb74c10c62142c0af13c19db36e7d4d', 'id_user': 'f8fff835e36d4401a40630f0a0018264', 'measure_unit': 'celssius', ...}]}, list)\n    +    where {'sensors': [{'_id': 'f6de2b710cc34f5baf6b2a476712e03b', 'id_device': '4fb74c10c62142c0af13c19db36e7d4d', 'id_user': '...: '4fb74c10c62142c0af13c19db36e7d4d', 'id_user': 'f8fff835e36d4401a40630f0a0018264', 'measure_unit': 'celssius', ...}]} = <bound method Response.json of <Response [200]>>()\n    +      where <bound method Response.json of <Response [200]>> = <Response [200]>.json\n", "test_name": "test_get_user_sensors", "rerun": "0"}, "7": {"status": "FAIL", "message": "   AssertionError: assert False\n    +  where False = isinstance({'sensors': [{'_id': 'f6de2b710cc34f5baf6b2a476712e03b', 'id_device': '4fb74c10c62142c0af13c19db36e7d4d', 'id_user': '...: '4fb74c10c62142c0af13c19db36e7d4d', 'id_user': 'f8fff835e36d4401a40630f0a0018264', 'measure_unit': 'celssius', ...}]}, list)\n    +    where {'sensors': [{'_id': 'f6de2b710cc34f5baf6b2a476712e03b', 'id_device': '4fb74c10c62142c0af13c19db36e7d4d', 'id_user': '...: '4fb74c10c62142c0af13c19db36e7d4d', 'id_user': 'f8fff835e36d4401a40630f0a0018264', 'measure_unit': 'celssius', ...}]} = <bound method Response.json of <Response [200]>>()\n    +      where <bound method Response.json of <Response [200]>> = <Response [200]>.json\n", "test_name": "test_get_device_sensors", "rerun": "0"}, "8": {"status": "PASS", "message": "", "test_name": "test_delete_sensor_unauthorized", "rerun": "0"}, "9": {"status": "PASS", "message": "", "test_name": "test_delete_sensor", "rerun": "0"}}, "status": {"total_pass": 7, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 3, "total_error": 0}}, "4": {"suite_name": "test/test_user.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_post_user_invalid_passwd_format", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_post_user", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_post_user_exists", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_post_email_exists", "rerun": "0"}, "4": {"status": "PASS", "message": "", "test_name": "test_login", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_get_user", "rerun": "0"}, "6": {"status": "FAIL", "message": "   AssertionError: assert False\n    +  where False = isinstance({'users': [{'_id': '5c19a5a2fcd64e2a9401225b61596b3d', 'email': 'admin@yahoo.com', 'name': 'admin', 'password': '53c2f...email': 'nmagquurukstgumq@test.com', 'name': 'TEST-nmagquurukstgumq', 'password': '7d0b771c8bb11155eb1bac85c15b74f0'}]}, list)\n    +    where {'users': [{'_id': '5c19a5a2fcd64e2a9401225b61596b3d', 'email': 'admin@yahoo.com', 'name': 'admin', 'password': '53c2f...email': 'nmagquurukstgumq@test.com', 'name': 'TEST-nmagquurukstgumq', 'password': '7d0b771c8bb11155eb1bac85c15b74f0'}]} = <bound method Response.json of <Response [200]>>()\n    +      where <bound method Response.json of <Response [200]>> = <Response [200]>.json\n", "test_name": "test_get_users", "rerun": "0"}, "7": {"status": "PASS", "message": "", "test_name": "test_put_user", "rerun": "0"}, "8": {"status": "PASS", "message": "", "test_name": "test_delete_user_unauthorized", "rerun": "0"}, "9": {"status": "PASS", "message": "", "test_name": "test_delete_user", "rerun": "0"}}, "status": {"total_pass": 9, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 1, "total_error": 0}}}}, "date": "March 09, 2021", "start_time": 1615321189, "total_suite": 5, "status": "FAIL", "status_list": {"pass": "29", "fail": "9", "skip": "0", "error": "0", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "38"}